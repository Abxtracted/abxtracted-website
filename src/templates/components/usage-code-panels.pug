include code.pug
include code-panel.pug
include code-panel-section.pug
include code-panels.pug

mixin usage-code-panels
  - var panels = [{selector: 'javascript', text: 'Javascript'}, {selector: 'curl', text: 'Curl'}];
  .usage-code-panels
    +code-panels(panels)
      +code-panel('javascript')
        +code-panel-section('Installation')
          p 1. Install abxtracted via NPM
          +code('bash')
            != '$ npm install abxtracted --save'
          p 2. Insert the abxtracted dist file in your index
          +code('xml')
            != '&ltscript src="/node_modules/abxtracted/dist/abxtracted.min.js"&gt&lt/script&gt'
        +code-panel-section('Usage')
          p 1. Obtain the user scenario:
          +code('javascript').
            /*
            ** Abx.Experiment(projectId, experimentKey)
            **
            ** @projectId: String
            ** @experimentKey: String
            */
            var experiment = new Abx.Experiment('project-id', 'experiment_key');

            /*
            ** experiment.getScenario(params)
            **
            ** @params: Object
            ** @params.customerId: String [optional]
            ** @params.success: Function [required]
            ** @params.error: Function [required]
            */
            experiment.getScenario({
              success: function(response){
                var scenario = response.scenario;
                // The scenario will be 'control' or 'variation'.
              },
              error: function(err){
                // In case some error occur, you should arbitrarily present either
                // 'control' or 'variation' for the customer.
                // In this case, customer will not count in the statistics.
              }
            });
          p
            != '<strong>Note:</strong> If you opt to inform customer id, it must be any unique information that identifies the customer in your application.'
          p 2. Inform when the user completes the experiment:
          +code('javascript').
            /*
            ** experiment.complete(params)
            **
            ** @params.customerId: String [optional/required]
            ** @params.success: Function [optional]
            ** @params.error: Function [optional]
            */
            experiment.complete({
              customerId: 'some-unique-string', // See IMPORTANT note below.
              success: function(response){
                // Something to be done after customer complete
                // the experiment successfully.
              },
              error: function(err){
                // Something to be done if customer could not
                // complete the experiment successfully.
              }
            });
          p
            != '<strong>IMPORTANT:</strong> CustomerId is required if you have identified the customer by yourself on getting scenario.'
          p 3. That's all.
      +code-panel('curl')
        +code-panel-section('Usage')
        p 1. Obtain the user scenario:
        +code('bash').
          curl -XGET 'http://api.abxtracted.com/public/project/{projectId}/customer/{customerId}/experiment/{experimentKey}'
        p 2. Inform when the user completes the experiment:
        +code('bash').
          curl -XGET 'http://api.abxtracted.com/public/project/{projectId}/customer/{customerId}/experiment/{experimentKey}/check/complete'
        p 3. That's all.
        p
          != '<strong>Note:</strong> The customerId may be an e-mail, an unique id or any unique information that identifies the user in your application.'
